{"version":3,"sources":["ScrollTask.js"],"names":["$","ScrollTask","key","task","_lastPos","_count","_setuped","_data","DIRECTION","UP","DOWN","BOTH","REFERENCE","TOP","BOTTOM","set","target","pos","func","reference","direction","last","getBoundingClientRect","top","windowHeight","window","innerHeight","document","documentElement","clientHeight","body","onscroll","scrollHandler","clear","currentPos","_DOWN","_UP","_TOP","i","l","length","t","functionSetup","$$","scroll","hasOwnProperty","init"],"mappings":"AA2BAA,EAAA,WACA,YAEA,IAAAC,GAAA,WACA,GACAC,GAAA,EACAC,KACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EAEAC,GACAC,WACAC,GAAA,EACAC,KAAA,EACAC,KAAA,GAEAC,WACAC,IAAA,EACAC,OAAA,IAKAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,MAAAD,IAAAA,EAAAZ,EAAAK,UAAAC,KACA,MAAAO,IAAAA,EAAAb,EAAAC,UAAAG,MAGAR,EAAAD,IACAc,OAAAA,EACAC,IAAAA,EACAC,KAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,KAAAL,EAAAM,wBAAAC,KAEAlB,GAGA,IAAAmB,GAAAC,OAAAC,aAAAC,SAAAC,gBAAAC,cAAAF,SAAAG,KAAAD,YAYA,OAXA,KAAAT,EAAAb,EAAAC,UAAAE,QACAS,GAAAZ,EAAAK,UAAAC,KAAAG,EAAAM,wBAAAC,IAAAN,GACAE,GAAAZ,EAAAK,UAAAE,QAAAU,EAAAR,EAAAM,wBAAAC,IAAAN,IACAC,IAIAZ,IACAmB,OAAAM,SAAAC,EACA1B,GAAA,GAEAJ,KAIA+B,EAAA,SAAA/B,IACAA,IAAAC,KACAA,EAAAD,GAAA,KACAG,IACA,GAAAA,IACAF,KACAD,EAAA,KAKA8B,EAAA,WACA,GAAA,GAAA3B,EAAA,OAAA,CAEA,IAAA6B,IAAAP,SAAAG,KAAAR,wBAAAC,IACAC,EAAAC,OAAAC,aAAAC,SAAAC,gBAAAC,cAAAF,SAAAG,KAAAD,YACA,IAAAK,GAAA9B,EAAA,CAKA,IAAA,GAHA+B,GAAA5B,EAAAC,UAAAE,KACA0B,EAAA7B,EAAAC,UAAAC,GACA4B,EAAA9B,EAAAK,UAAAC,IACAyB,EAAA,EAAAC,EAAApC,EAAAqC,OAAAD,EAAAD,EAAAA,IAAA,CACA,GAAAG,GAAAtC,EAAAmC,EACA,IAAA,MAAAG,EAAA,CACA,GAAApB,GAAAoB,EAAAzB,OAAAM,wBAAAC,IACAN,EAAAoB,GAAAI,EAAAtB,UAAAsB,EAAAxB,IAAAO,EAAAiB,EAAAxB,GACAiB,GAAA9B,EAEA,IAAAqC,EAAArB,UAAAe,IAAAM,EAAApB,KAAAJ,GAAAA,GAAAI,GAAAoB,EAAAvB,OAGA,IAAAuB,EAAArB,UAAAgB,IAAAK,EAAApB,KAAAJ,GAAAI,GAAAJ,GAAAwB,EAAAvB,OAEAuB,EAAApB,KAAAA,GAGAjB,EAAA8B,IAIAQ,EAAA,WAGAjB,OAAAkB,GAAAlB,OAAAkB,OACAlB,OAAAkB,GAAAC,SACA,KAAA,GAAAN,KAAA/B,GACAA,EAAAsC,eAAAP,KACAb,OAAAkB,GAAAC,OAAAN,GAAA/B,EAAA+B,GAEAb,QAAAkB,GAAAC,OAAA7B,IAAAA,EACAU,OAAAkB,GAAAC,OAAAX,MAAAA,GAIAa,EAAA,WACAJ,IAEAI,KAGA7C","file":"ScrollTask.min.js","sourcesContent":["/************************************************ \r\nScroll Task\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.0.1\r\nUpdate: 2015-11-10\r\n\r\nDescription:\r\n    Monitor scrolling action and run pre-defined task when scroll to specific position on screen.\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; IE 7,8;\r\n \r\nDependency:\r\n    jQuery\r\n\r\nAPI:\r\n    $$.scroll.set(target, pos, func[, reference[, direction]])\r\n\r\n    $$.scroll.clear(key)\r\n\r\n    $$.scroll\r\n\r\n\r\n************************************************/\r\n\r\n$(function () {\r\n    \"use strict\";\r\n\r\n    var ScrollTask = function () {\r\n        var that = this;\r\n        var key = 0;            // index number used to identify task\r\n        var task = [];          // task data list\r\n        var _lastPos = 0;       // lat position of body, used to detect whether it is scrolling up or down\r\n        var _count = 0;         // count of task\r\n        var _setuped = false;   // whether the scroll function is binded or not\r\n\r\n        var _data = {\r\n            DIRECTION:{\r\n                UP: 1,\r\n                DOWN: 2,\r\n                BOTH: 3\r\n            },\r\n            REFERENCE: {\r\n                TOP: 1,\r\n                BOTTOM: 2\r\n            }\r\n        };\r\n\r\n        // set a task\r\n        var set = function (target, pos, func, reference, direction) {\r\n            // set default opts\r\n            if (reference == null) reference = _data.REFERENCE.TOP;\r\n            if (direction == null) direction = _data.DIRECTION.BOTH;\r\n\r\n            // push options into list\r\n            task[key] = {\r\n                target: target,\r\n                pos: pos,\r\n                func: func,\r\n                reference: reference,\r\n                direction: direction,\r\n                last: target.getBoundingClientRect().top\r\n            };\r\n            _count++;\r\n\r\n            // trigger the task if it fits the condition already\r\n            var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            if ((direction & _data.DIRECTION.DOWN) != 0 &&\r\n                ((reference == _data.REFERENCE.TOP && target.getBoundingClientRect().top < pos)\r\n                  || (reference == _data.REFERENCE.BOTTOM && windowHeight-target.getBoundingClientRect().top > pos))) {\r\n                func();\r\n            }\r\n\r\n            // bind scroll handler for  1st time\r\n            if (!_setuped) {\r\n                window.onscroll = scrollHandler;\r\n                _setuped = true;\r\n            }\r\n            return key++;\r\n        };\r\n\r\n        // clear a task\r\n        var clear = function (key) {\r\n            if (!key in task) return;\r\n            task[key] = null;\r\n            _count--;\r\n            if (_count <= 0) {\r\n                task = [];\r\n                key = 0;\r\n            }\r\n        };\r\n\r\n        // bind function to scroll\r\n        var scrollHandler = function () {\r\n            if (_count <= 0) return false;\r\n\r\n            var currentPos = -document.body.getBoundingClientRect().top;\r\n            var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            if (currentPos == _lastPos) return;\r\n            \r\n            var _DOWN = _data.DIRECTION.DOWN;\r\n            var _UP = _data.DIRECTION.UP;\r\n            var _TOP = _data.REFERENCE.TOP;\r\n            for (var i = 0, l = task.length; i < l; i++) {\r\n                var t = task[i];\r\n                if (t == null) continue;\r\n                var last = t.target.getBoundingClientRect().top;\r\n                var pos = _TOP == t.reference ? t.pos : windowHeight - t.pos;\r\n                if (currentPos > _lastPos) {\r\n                    // Scroll down\r\n                    if ((t.direction & _DOWN) != 0 && (t.last > pos && pos >= last)) t.func();\r\n                } else {\r\n                    // Scroll Up\r\n                    if ((t.direction & _UP) != 0 && (t.last < pos && pos <= last)) t.func();\r\n                }\r\n                t.last = last;\r\n            }\r\n\r\n            _lastPos = currentPos;\r\n        };\r\n\r\n        // Setup global function\r\n        var functionSetup = function () {\r\n            // Basic function\r\n\r\n            window.$$ = window.$$ || {};\r\n            window.$$.scroll = {};\r\n            for (var i in _data) {\r\n                if (!_data.hasOwnProperty(i)) continue;\r\n                window.$$.scroll[i] = _data[i];\r\n            }\r\n            window.$$.scroll.set = set;\r\n            window.$$.scroll.clear = clear;\r\n        };\r\n\r\n        // Initialize the whole function\r\n        var init = function () {\r\n            functionSetup();\r\n        };\r\n        init();\r\n    };\r\n\r\n    ScrollTask();\r\n});"],"sourceRoot":"/source/"}